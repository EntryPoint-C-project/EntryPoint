name: Static Analysis Checks

on:
  push:
    branches:
      - '**'

defaults:
  run:
    working-directory: .

jobs:
  install-deps:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y clang-format clang-tidy libboost-all-dev \
                                  libcurl4-openssl-dev libpq-dev \
                                  nlohmann-json3-dev libpqxx-dev

      - name: Cache TgBot
        id: cache-tgbot
        uses: actions/cache@v3
        with:
          path: |
            /usr/local/lib/libTgBot.so
            /usr/local/include/tgbot
          key: tgbot-${{ runner.os }}-v1

      - name: Install TgBot
        if: steps.cache-tgbot.outputs.cache-hit != 'true'
        run: |
          git clone https://github.com/reo7sp/tgbot-cpp.git
          cd tgbot-cpp
          mkdir build
          cd build
          cmake .. 
          make -j$(nproc)
          sudo make install

      - name: Configure CMake
        run: cmake -S . -B build -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DTgBot_DIR=/usr/local/lib/cmake/TgBot

      - name: Cache Build Directory
        uses: actions/cache@v3
        with:
          path: build
          key: ${{ runner.os }}-build-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-

  clang-tidy:
    needs: install-deps
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Restore Cached Build
        uses: actions/cache@v3
        with:
          path: build
          key: ${{ runner.os }}-build-${{ github.sha }}

      - name: Run Clang Tidy
        run: |
          CHANGED_FILES=$(git ls-files '*.cpp' '*.h')
          if [[ -n "$CHANGED_FILES" ]]; then
            echo "$CHANGED_FILES" | xargs clang-tidy -p build --extra-arg="-Iinclude" --warnings-as-errors=*
          else
            echo "No C++ files found."
          fi
